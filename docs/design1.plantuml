@startuml design1

class SourceFiles
class NewCodeFiles

class Main {
    + main()
}

class Module {
    - name : string
    - imports : string[]

    + createFromFile(fileName : string) : Module
}

class WrapRequest {
    + compiler : string
    + files : string[]
    + extraOptions : string
}

class ArgumentProcessor {
    - {static} instance : ArgumentProcessor
    - ArgumentProcessor()
    + {static} getInstance() : ArgumentProcessor
    + getRequest() : WrapRequest
}

class NewCodeMaker {
    - getModules(fileNames : string[]) : Module[]
    + generateNewCode(request : WrapRequest)
}

class ObjectBuilder {
    + {static} build(request : WrapRequest)
}

Main --d-> ArgumentProcessor
Main ---> ObjectBuilder
Main --d-> WrapRequest
Main --l-> NewCodeMaker

ArgumentProcessor ..> WrapRequest

NewCodeMaker -u-> SourceFiles
NewCodeMaker .l.> "*" Module
NewCodeMaker ..> NewCodeFiles
NewCodeMaker --> WrapRequest

ObjectBuilder --> WrapRequest
ObjectBuilder --> NewCodeFiles

@enduml