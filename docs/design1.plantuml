@startuml design1

class SourceFiles
class NewCodeFiles

class Main {
    + main()
}

class Module {
    - name : string
    - imports : string[]
    - defineModule : string

    + createFromFile(fileName : string) : Module
}

class WrapRequest {
    + compiler : string
    + files : string[]
    + extraOptions : string
}

class ArgumentProcessor {
    - {static} instance : ArgumentProcessor
    - ArgumentProcessor()
    + {static} getInstance() : ArgumentProcessor
    + getRequest() : WrapRequest
}

note top of Module : defineModule replaces module() macro in c code using defines

class NewCodeMaker {
    - getModules(fileNames : string[]) : Module[]
    + generateNewCode(request : WrapRequest)
}

class ObjectBuilder {
    + {static} build(request : WrapRequest)
}

Main --d-> ArgumentProcessor
ArgumentProcessor ..> WrapRequest
Main --d-> WrapRequest
Main -u-> SourceFiles
SourceFiles -[hidden]> NewCodeFiles
Main -d-> NewCodeMaker
NewCodeMaker .l.> "*" Module
NewCodeMaker ..> NewCodeFiles
Main ---> NewCodeFiles
NewCodeMaker --> WrapRequest
ObjectBuilder --> WrapRequest
Main ---> ObjectBuilder

@enduml